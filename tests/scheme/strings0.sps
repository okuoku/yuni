(import (yuni scheme)
        (yunitest mini))

;; Strings
(check-equal "" (string))
(check-equal "ab" (string #\a #\b))
(check-equal "abc" (string #\a #\b #\c))

(check-equal "abc" (substring "abc" 0 3))
(check-equal "" (substring "" 0 0))
(check-equal "abc" (substring "00abc00" 2 5))
(check-equal "" (substring "00abc00" 2 2))

(check-equal "" (string-append))
(check-equal "a" (string-append "a"))
(check-equal "ab" (string-append "a" (string #\b)))
(check-equal "abcabc" (string-append (string #\a #\b #\c) "abc"))

(check-equal '() (string->list ""))
(check-equal '(#\a) (string->list "a"))
(check-equal '(#\a #\b #\c) (string->list (string #\a #\b #\c)))
(check-equal '(#\a #\b) (string->list "000ab" 3))
(check-equal '(#\a #\b #\c) (string->list "000abc000" 3 6))
(check-equal '() (string->list "000" 2 2))

(check-equal "abc" (list->string '(#\a #\b #\c)))
(check-equal "" (list->string '()))

(check-equal "abc" (string-copy "abc"))
(check-equal "abc" (string-copy (string #\a #\b #\c)))
(check-equal "" (string-copy (string)))
(check-equal "" (string-copy ""))
(check-equal "abc00" (string-copy "00abc00" 2))

#|
(check-equal "" (make-string 0))
(check-equal "a" (make-string 1 #\a))
(check-equal "aa" (make-string 2 #\a))
(check-equal "aaa" (make-string 3 #\a))
|#

(check-equal #t (string=? "a" "a"))
(check-equal #t (string=? "a" "a" "a"))
(check-equal #t (string=? "aaa" "aaa"))
(check-equal #t (string=? "aaa" "aaa" "aaa"))
(check-equal #t (string=? "aaa" "aaa" "aaa" "aaa"))
(check-equal #t (string=? "aaa" "aaa" "aaa" "aaa" "aaa"))
(check-equal #t (string=? "" ""))
(check-equal #t (string=? "" "" ""))
(check-equal #t (string=? "" "" "" ""))
(check-equal #f (string=? "" "a"))
(check-equal #f (string=? "a" "a" "b"))
(check-equal #f (string=? "aaab" "aaaa"))
(check-equal #f (string=? "aa" "aa" "ab"))
(check-equal #f (string=? "aaaa" "aaa"))
(check-equal #f (string=? "aaaa" "aaaa" "aaaaa"))

(check-equal #f (string<? "a" "a"))
(check-equal #t (string<? "a" "b"))
(check-equal #t (string<? "aaaa" "aaab"))
(check-equal #t (string<? "a" "b" "c"))
(check-equal #t (string<? "aaaa" "aaab" "aaac"))
(check-equal #t (string<? "aaa" "aaaa"))
(check-equal #f (string<? "aaa" "aaa" "aaaa"))
(check-equal #f (string<? "aaa" "aab" "aab"))
(check-equal #f (string<? "aaab" "aaaa"))
(check-equal #f (string<? "aaab" "aaaa"))
(check-equal #f (string<? "aaaa" "aaa"))
(check-equal #f (string<? "aaaa" "aaaa" "aaa"))

(check-equal #t (string<=? "a" "a"))
(check-equal #t (string<=? "a" "b"))
(check-equal #t (string<=? "aaaa" "aaab"))
(check-equal #t (string<=? "a" "b" "c"))
(check-equal #t (string<=? "aaaa" "aaab" "aaac"))
(check-equal #t (string<=? "aaa" "aaaa"))
(check-equal #t (string<=? "aaa" "aaa" "aaaa"))
(check-equal #t (string<=? "aaa" "aab" "aab"))
(check-equal #f (string<=? "aaab" "aaaa"))
(check-equal #f (string<=? "aaaa" "aaa"))
(check-equal #f (string<=? "aaaa" "aaaa" "aaa"))

(check-equal #f (string>? "a" "b"))
(check-equal #t (string>? "b" "a"))
(check-equal #f (string>? "b" "b" "a"))
(check-equal #t (string>? "c" "b" "a"))
(check-equal #f (string>? "c" "b" "b"))

(check-equal #f (string>=? "a" "b"))
(check-equal #t (string>=? "b" "a"))
(check-equal #t (string>=? "a" "a"))
(check-equal #t (string>=? "b" "b" "a"))
(check-equal #t (string>=? "c" "b" "a"))
(check-equal #t (string>=? "c" "b" "b"))
(check-equal #f (string>=? "c" "b" "d"))

(check-finish)
