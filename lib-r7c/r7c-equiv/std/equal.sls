(library (r7c-equiv std equal)
         (export equal?)
         (import (r7c-basic syntax define)
                 (r7c-system core)
                 (r7c syntax cond)
                 (r7c syntax and)
                 (r7c heap pair)
                 (r7c heap fixnum)
                 (r7c heap bytevector)
                 (r7c heap core)
                 (r7c heap string)
                 (r7c-basic lib strings)
                 )

;; Equal for vector

(define (%vector-equal?/itr pos len a b)
  (if ($fx= pos len)
    #t
    (and (equal? (vector-ref a pos) (vector-ref b pos))
         (%vector-equal?/itr ($fx+ pos 1) len a b))))

(define (%bytevector-equal?/itr pos len a b)
  (if ($fx= pos len)
    #t
    (and ($fx= (bytevector-u8-ref a pos)
               (bytevector-u8-ref b pos))
         (%bytevector-equal?/itr ($fx+ pos 1) len a b))))

(define (equal? a b)
  (cond
    ((pair? a)
     (and (pair? b)
          (equal? (car a) (car b))
          (equal? (cdr a) (cdr b))))
    ((vector? a)
     (and (vector? b)
          (let ((len (vector-length a)))
           (and ($fx= len (vector-length b))
                (%vector-equal?/itr 0 len a b)))))
    ((string? a)
     (and (string? b)
          (string=? a b)))
    ((bytevector? a)
     (and (bytevector? b)
          (let ((len (bytevector-length a)))
           (and ($fx= len (bytevector-length b))
                (%bytevector-equal?/itr 0 len a b)))))
    ((eq? a b) #t)
    ((eqv? a b) #t)
    (else #f)))
)
