#
# New Bootstrap
#


cmake_minimum_required(VERSION 3.0)
project(yuni NONE) # Only for selfboot scripts

include(CTest)

set(YUNIROOT ${CMAKE_CURRENT_LIST_DIR})
get_filename_component(YUNIROOT ${YUNIROOT} ABSOLUTE)
include(${YUNIROOT}/config/implinfo.cmake)
set(BOOTDIR ${CMAKE_CURRENT_BINARY_DIR})

list(APPEND CMAKE_MODULE_PATH
    # Private modules
    ${YUNIROOT}/cmake
    # Public modules
    ${YUNIROOT}/cmake/public)

if(YUNI_WITH_YUNIBASE)
    include(YuniBaseGenRunners)
    set(YUNI_BASEDIR ${YUNIROOT})
    set(YUNIBASE_VANILLA_PATH ${CMAKE_CURRENT_BINARY_DIR}/vanilla)
    set(YUNIBASE_YUNIFIED_PATH ${CMAKE_CURRENT_BINARY_DIR}/bogus)
    emit_yunibase_runners()
endif()

set(VARFILE ${CMAKE_CURRENT_BINARY_DIR}/_vars.cmake)
get_filename_component(VARFILE ${VARFILE} ABSOLUTE)

function(writeproxy scriptname)
    file(WRITE ${CMAKE_CURRENT_BINARY_DIR}/${scriptname}
        "include(${YUNIROOT}/config/implinfo.cmake)\ninclude(${VARFILE})\ninclude(${YUNIROOT}/scripts/${scriptname})\n")
endfunction()

function(writevar varname)
    file(APPEND ${VARFILE} "set(${varname} \"${${varname}}\")\n")
endfunction()

macro(checkimpl nam impl)
    if(YUNI_${impl})
        writevar(YUNI_${impl})
        list(APPEND impls ${impl})
        if(NOT selfboot_${impl})
            message(FATAL_ERROR "Unknown impl: ${impl}")
        endif()
        if(UNIX)
            set(_cmd "${CMAKE_CURRENT_BINARY_DIR}/run-${nam}.sh")
            file(WRITE ${_cmd}
                "#!/bin/sh\nexec ${YUNI_${impl}} ${arg_prog_${impl}} ${YUNIROOT}/lib-runtime/selfboot/${selfboot_${impl}} $*\n")
            execute_process(
                COMMAND chmod +x ${_cmd})
        endif()
    else()
        message(STATUS "Skip: ${impl}")
    endif()
endmacro()

macro(checkimpls nam cmd impl)
    if(YUNI_WITH_YUNIBASE)
        if(NOT YUNI_${impl})
            if(EXISTS ${YUNIBASE_VANILLA_PATH}/${cmd})
                message(STATUS "Yunibase: ${YUNIBASE_VANILLA_PATH}/${cmd}")
                set(YUNI_${impl} ${YUNIBASE_VANILLA_PATH}/${cmd})
            endif()
        else()
            message(STATUS "YUNI_${impl}: ${YUNI_${impl}}")
        endif()
    elseif(YUNI_${impl})
        message(STATUS "YUNI_${impl}: ${YUNI_${impl}}")
    endif()
    checkimpl(${nam} ${impl})

    set(_test ${ARGN})
    if(_test)
        # Call next
        checkimpls(${ARGN})
    else()
        # Term
        if(UNIX)
            set(_cmd "${CMAKE_CURRENT_BINARY_DIR}/run-all.sh")
            file(WRITE ${_cmd}
                "#!/bin/sh\nexec ${CMAKE_COMMAND} -P ${CMAKE_CURRENT_BINARY_DIR}/run-all.cmake $*\n")
            execute_process(
                COMMAND chmod +x ${_cmd})
        endif()
    endif()
endmacro()

file(WRITE ${VARFILE} "# Autogenerated. Do not edit.\n")

writevar(YUNIROOT)
writevar(BOOTDIR)
writeproxy(run-all.cmake)
writeproxy(run.cmake)

set(impls)

checkimpls(
    # Impl name  Cmd name     CMake Varname
    chibi-scheme chibi-scheme CHIBI_SCHEME
    gauche       gosh         GOSH
    guile        guile        GUILE
    racket       racket       RACKET
    sagittarius  sagittarius  SAGITTARIUS
    chicken      csi          CHICKEN5_CSI
    chez         chez-scheme  CHEZ_SCHEME
    mit-scheme   mit-scheme   MIT_SCHEME
    gambit       gsi          GSI
    ironscheme   IRONSCHEME   IRON_SCHEME # FIXME:
    kawa         kawa         KAWA
    s7           s7yuni       S7
    biwascheme   biwasyuni    BIWASYUNI)

file(APPEND ${VARFILE} "set(YUNIBOOT_IMPLS\n")

foreach(e ${impls})
    file(APPEND ${VARFILE} "    ${e}\n")
endforeach()

file(APPEND ${VARFILE} ")\n")


# Testing
include(newboot/tests.cmake)
